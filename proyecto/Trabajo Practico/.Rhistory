plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font= times new roman, xlim= c(1940,2020))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font=4, xlim= c(1940,2020))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font=5, xlim= c(1940,2020))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font=10, xlim= c(1940,2020))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font=10, xlim= c(1910,2030))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font=10, xlim= c(1940,2020))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font=1, xlim= c(1940,2020))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014", font=5,
ylab="Matriculación",xlab="Años", col="blue", font=1, xlim= c(1940,2020))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font=1, xlim= c(1940,2020))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font=2, xlim= c(1940,2020))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font=14, xlim= c(1940,2020))
fonts()
fonttable()
library(extrafont)
install.packages("extrafont")
library(extrafont)
extrafont::choose_font()
extrafont::choose_font(1)
fonts()
fonttable()
fonts()
fonts()
library(extrafont)
font_import()
fonts()
fonttable()
detach("package:extrafont", unload=TRUE)
library("extrafont", lib.loc="~/R/win-library/3.4")
library("extrafontdb", lib.loc="~/R/win-library/3.4")
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font=14, xlim= c(min,max))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font=14, xlim= c(1939,2016))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font=11, xlim= c(1939,2016))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font=11, xlim= c(1939,2016))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", font=11, xlim= c(1939,2016))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue", windowsFonts(A = windowsFont("Times New Roman")), xlim= c(1939,2016))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue",font=19, xlim= c(1939,2016))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue",font=30, xlim= c(1939,2016))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue",font=40, xlim= c(1939,2016))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue",font=45, xlim= c(1939,2016))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue",font=9, xlim= c(1939,2016))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",font=9, main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue",font=9, xlim= c(1939,2016))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l", main="Matricula CNC:1940-2014",
ylab="Matriculación",xlab="Años", col="blue",font=9, xlim= c(1939,2016))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",
main="Matricula CNC:1940-2014",
ylab="Matriculación",
xlab="Años", col="blue",font=9, xlim= c(1939,2016))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",
main="Matricula CNC:1940-2014",font.main=9,
ylab="Matriculación",
xlab="Años", col="blue",font=9, xlim= c(1939,2016))
plot(matriculacnc$X__1,matriculacnc$X__2,type="l",
main="Matricula CNC: 1940-2014",font.main=9,
ylab="Matriculación",
xlab="Años", font.lab=9, col="blue",font=9, xlim= c(1940,2014))
help(par)
install.packages("rDNA")
knitr::opts_chunk$set(echo = TRUE)
becal_completo = read.csv("becal_completo.csv")
table (becal_completo$tipoestudio) #Para identificar los tipos de programas no directamente clasificados como Maestria o Doctorado. Todos corresponden segun previa clasificacion a doctorado, maestria academica o maestria profesional.
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(echo = TRUE)
becal_completo = read.csv("becal_completo.csv")
summary(becal_completo$mesesdeduraciondeestudios)
quantile(becal_completo$mesesdeduraciondeestudios)
View(becal_completo)
table(becal_completo$mesesdeduraciondeestudios)
hist(becal_completo$mesesdeduraciondeestudios)
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.004), xlab = "meses")
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.02), xlab = "meses")
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.2), xlab = "meses")
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.30), xlab = "meses")
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.01), xlab = "meses")
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.5), xlab = "meses")
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.01), xlab = "meses")
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.10), xlab = "meses")
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.05), xlab = "meses")
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.005), xlab = "meses")
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.01), xlab = "meses")
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.0), xlab = "meses")
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.1), xlab = "meses")
summary(becal_completo$mesesdeduraciondeestudios)
quantile(becal_completo$mesesdeduraciondeestudios)
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.1), xlab = "meses")
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.1), xlab = "meses")
summary(becal_completo$mesesdeduraciondeestudios)
hist(becal_completo$mesesdeduraciondeestudios, main = "Meses de duración de estudio BECAL",
freq = FALSE, ylim=c(0,0.1), xlab = "meses")
sd(becal_completo$mesesdeduraciondeestudios)
qunatile(becal_completo$mesesdeduraciondeestudios, probs=c(0.95))
quantile(becal_completo$mesesdeduraciondeestudios, probs=c(0.95))
quantile(becal_completo$mesesdeduraciondeestudios, probs=c(0.68))
quantile (becal_completo$condicion)
piechart (becal_completo$condicion)
pie (becal_completo$condicion)
barplot(prop.table(table(becal_completo$condicion)), col=c("yellow","orange"), ylim=c(0,0.7),
main="Completitud de Estudios", ylab ="")
barplot(prop.table(table(becal_completo$condicion)), col=c("yellow","orange"), ylim=c(0,2),
main="Completitud de Estudios", ylab ="")
barplot(prop.table(table(becal_completo$condicion)), col=c("yellow","orange"), ylim=c(0,0.2),
main="Completitud de Estudios", ylab ="")
barplot(prop.table(table(becal_completo$condicion)), col=c("yellow","orange"), ylim=c(0,0.10),
main="Completitud de Estudios", ylab ="")
barplot(prop.table(table(becal_completo$condicion)), col=c("yellow","orange"), ylim=c(0,0.1),
main="Completitud de Estudios", ylab ="")
barplot(prop.table(table(becal_completo$condicion)), col=c("yellow","orange"), ylim=c(0,0.7),
main="Completitud de Estudios", ylab ="")
barplot(prop.table(table(becal_completo$condicion)), col=c("yellow","orange"), ylim=c(0,0.8),
main="Completitud de Estudios", ylab ="")
barplot(prop.table(table(becal_completo$condicion)), col=c("yellow","orange"), ylim=c(0,0.9),
main="Completitud de Estudios", ylab ="")
barplot(prop.table(table(becal_completo$condicion)), col=c("yellow","orange"), ylim=c(0,0.9),
main="Completitud de Estudios becarixs", ylab ="")
?text
barplot(prop.table(table(becal_completo$condicion)), col=c("yellow","orange"), ylim=c(0,0.9),
main="Completitud de Estudios becarixs", ylab ="", text(x,y))
?legend
pie(table(table(becal_completo$condicion))
pie(table(becal_completo$condicion))
pie(table(becal_completo$condicion),
main="Situacion sentimental estudiantes 2012",
col=terrain.colors(5, alpha = .6),
radius = .8)
pie(table(becal_completo$condicion),
main="Completitud de Estudios becarixs",
col=terrain.colors(5, alpha = .6),
radius = .10)
pie(table(becal_completo$condicion),
main="Completitud de Estudios becarixs",
col=terrain.colors(5, alpha = .6),
radius = .1)
pie(table(becal_completo$condicion),
main="Completitud de Estudios becarixs",
col=terrain.colors(5, alpha = .6),
radius = .1)
pie(table(becal_completo$condicion),
main="Completitud de Estudios becarixs",
col=terrain.colors(5, alpha = .6),
radius = .20)
pie(table(becal_completo$condicion),
main="Completitud de Estudios becarixs",
col=terrain.colors(5, alpha = .6),
radius = .50)
pie(table(becal_completo$condicion),
main="Completitud de Estudios becarixs",
col=terrain.colors(5, alpha = .6),
radius = 1)
pie(table(becal_completo$condicion),
main="Completitud de Estudios becarixs",
col=terrain.colors(5, alpha = .6),
radius = 0.9)
percentlabels<- round(100*B/sum(B), 1)
percentlabels<- round(100*becal_completo$condicion/sum(becal_completo$condicion), 1)
barplot(prop.table(table(becal_completo$condicion)), col=c("yellow","orange"), ylim=c(0,0.9),
main="Completitud de Estudios becarixs", size=3, vjust=2, hjust=0.5, ylab ="")
pie(table(becal_completo$condicion),
main="Completitud de Estudios becarixs",
col=terrain.colors(5, alpha = .6),
radius = 0.9,
labels = %)
piepercent<- round(100*becal_completo$condicion/sum(becal_completo$condicion), 1)
pie(table(becal_completo$condicion),
main="Completitud de Estudios becarixs",
col=terrain.colors(5, alpha = .6),
radius = 0.9)
install.packages("plotrix")
library("plotrix", lib.loc="~/R/win-library/3.4")
detach("package:plotrix", unload=TRUE)
install.packages("plotly")
library("plotly", lib.loc="~/R/win-library/3.4")
p <- plot_ly(becal_completo$condicion, labels = ~Categorie, values = ~X1960, type = 'pie') %>%
layout(title = 'Completitud de Estudios becarixs',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p <- plot_ly(becal_completo$condicion, labels =  "becario", "becario retornado", values = ~X1960, type = 'pie') %>%
layout(title = 'Completitud de Estudios becarixs',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
x <- data.frame("becal_completo"=rownames(Condicion), becal_completo)
data <- becal_completo[,c('condicion')]
p <- plot_ly(data, labels = ~condicion, values = ~X1960, type = 'pie') %>%
layout(title = 'Completitud de Estudios becarixs',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
p <- plot_ly(becal_completo$condicion, labels = ~condicion, values = ~X1960, type = 'pie') %>%
layout(title = 'Completitud de Estudios becarixs',
xaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE),
yaxis = list(showgrid = FALSE, zeroline = FALSE, showticklabels = FALSE))
rm(data)
pie3D(table(becal_completo$condicion))
library("plotrix", lib.loc="~/R/win-library/3.4")
pie3D(table(becal_completo$condicion))
pie (table(becal_completo$condicion))
table(table(becal_completo$condicion)
table(becal_completo$condicion)
table(becal_completo$condicion)
knitr::opts_chunk$set(echo = TRUE)
pie(table(becal_completo$condicion),
main="Completitud de Estudios becarixs",
col=terrain.colors(5, alpha = .6),
radius = 0.9)
table(becal_completo$condicion)
table(becal_completo$condicion)
pie(table(becal_completo$condicion),
main="Completitud de Estudios becarixs",
col=terrain.colors(5, alpha = .6),
radius = 0.9)
table(becal_completo$paisdedestino)
table(becal_completo$ciudaddedestinoenespanol)
table(becal_completo$universidaddedestino)
plot(becal_completo, becal_completo$ciudaddedestinoenespanol)
plot(becal_completo$ciudaddedestinoenespanol)
scatterplot(becal_completo$ciudaddedestinoenespanol)
plot(becal_completo$ciudaddedestinoenespanol)
plot(becal_completo, becal_completo$ciudaddedestinoenespanol, main="Scatterplot Example",
xlab="Car Weight ", ylab="Miles Per Gallon ", pch=19)
plot(becal_completo$ciudaddedestinoenespanol, horizontal=TRUE)
plot(becal_completo$ciudaddedestinoenespanol, vertical=TRUE)
barplot(prop.table(table(becal_completo$categoriauni)), col=c("yellow","orange"), ylim=c(0,0.9),
main="Ranking universidades becarixs BECAL", ylab ="")
barplot(prop.table(table(becal_completo$categoriauni)), col= rainbow, ylim=c(0,0.9),
main="Ranking universidades becarixs BECAL", ylab ="")
barplot(prop.table(table(becal_completo$categoriauni)), col= "rainbow", ylim=c(0,0.9),
main="Ranking universidades becarixs BECAL", ylab ="")
barplot(prop.table(table(becal_completo$categoriauni)), ylim=c(0,0.9),
main="Ranking universidades becarixs BECAL", ylab ="")
barplot(prop.table(table(becal_completo$categoriauni)), col = (c="yellow", "blue", "orange", "red", "green"), ylim=c(0,0.9),
main="Ranking universidades becarixs BECAL", ylab ="")
barplot(prop.table(table(becal_completo$categoriauni)), col = (c("yellow", "blue", "orange", "red", "green"), ylim=c(0,0.9),
main="Ranking universidades becarixs BECAL", ylab ="")
barplot(prop.table(table(becal_completo$categoriauni)),
col = c("yellow", "blue", "orange", "red", "green"), ylim=c(0,0.9),
main="Ranking universidades becarixs BECAL", ylab ="")
table(becal_completo$categoriauni)
barplot(prop.table(table(becal_completo$categoriauni)),
col = c("yellow", "blue", "orange", "red", "green"), ylim=c(0,0.9),
main="Ranking universidades becarixs BECAL", ylab ="")
barplot(prop.table(table(becal_completo$categoriauni)),
col = c("yellow", "blue", "orange", "red", "green"), ylim=c(0,0.9),
main="Ranking universidades becarixs BECAL", ylab ="")
summary(becal_completo$totalgeneral)
sd(becal_completo$totalgeneral)
barplot(prop.table(table(becal_completo$categoriauni)),
col = c("yellow", "blue", "orange", "red", "green"), ylim=c(0,0.9),
main="Ranking universidades becarixs BECAL", ylab ="", text(EP+2,format(EP), cex=0.7))
bp1<-barplot(prop.table(table(becal_completo$categoriauni)),
col = c("yellow", "blue", "orange", "red", "green"), ylim=c(0,0.9),
main="Ranking universidades becarixs BECAL", ylab ="")
knitr::opts_chunk$set(echo = TRUE)
summary(becal_completo$mesesdeduraciondeestudios)
bp1<-barplot(prop.table(table(becal_completo$categoriauni)),
col = c("yellow", "blue", "orange", "red", "green"), ylim=c(0,0.9),
main="Ranking universidades becarixs BECAL", ylab ="")
text(bp1, becal_completo$categoriauni+2,format(EP), cex=0.7)
summary(becal_completo$totalgeneral) #el promedio, la mediana, el mínimo, máximo
sd(becal_completo$totalgeneral) #desviación estándar de los montos de beca
sd(becal_completo$totalgeneral)
summary(becal_completo$totalgeneral)
hist(becal_completo$totalgeneral)
plot(becal_completo$totalgeneral)
plot(becal_completo$totalgeneral)
hist(becal_completo$totalgeneral)
table(becal_completo$totalgeneral)
View(becal_completo)
becal_completo [,"totalgeneral"==0]
becal_completo ["totalgeneral"==0]
which(grepl(0, becal_completo$totalgeneral))
which(grepl("0", becal_completo$totalgeneral))
which(grepl(180000, becal_completo$totalgeneral))
which(grepl(8600, becal_completo$totalgeneral))
sd(becal_completo$totalgeneral)
cuantile(becal_completo$totalgeneral)
quantile(becal_completo$totalgeneral)
summary(becal_completo$totalgeneral)
which(grepl(98212, 100100, 108130, 108740, 109292, 146132, 146908, 157568, 169768, 180000, becal_completo$totalgeneral))
which(grepl(98212, 100100, 108130, 108740, 109292, 146132, 146908, 157568, 169768, 180000,becal_completo$totalgeneral))
which(grepl(98212,becal_completo$totalgeneral))
which(grepl(98212,becal_completo$totalgeneral))
which(grepl(100100,becal_completo$totalgeneral))
which(grepl(108130,becal_completo$totalgeneral))
which(grepl(108740,becal_completo$totalgeneral))
which(grepl(109292,becal_completo$totalgeneral))
which(grepl(146132,becal_completo$totalgeneral))
which(grepl(146908,becal_completo$totalgeneral))
which(grepl(157568,becal_completo$totalgeneral))
which(grepl(169768,becal_completo$totalgeneral))
which(grepl(180000,becal_completo$totalgeneral))
plot(table(becal_completo$totalgeneral, becal_completo$categoriauni))
barplot (table(becal_completo$totalgeneral, becal_completo$categoriauni))
table(becal_completo$totalgeneral, becal_completo$categoriauni)
table(becal_completo$categoriauni, becal_completo$totalgeneral)
barplot (table(becal_completo$categoriauni, becal_completo$totalgeneral))
hist(table(becal_completo$categoriauni, becal_completo$totalgeneral))
plot(table(becal_completo$categoriauni, becal_completo$totalgeneral))
text(x = becal_completo$categoriauni[bp1],
y = becal_completo$categoriauni[bp1],
labels = "",
adj = )
text(x = becal_completo$categoriauni[becal_completo],
y = becal_completo$categoriauni[becal_completo],
labels = "",
adj = )
plot(table(becal_completo$categoriauni, becal_completo$totalgeneral), pch=19,col="red")
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=19,col="red")
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=19,col="red")
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=50,col="red")
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red")
barplot(becal_completo$categoriauni, becal_completo$totalgeneral)
barplot(becal_completo$totalgeneral, becal_completo$categoriauni)
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red")
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red")
rm(bp1)
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red", ylim=c(5,180000))
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red", ylim=c(0,100000))
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red", ylim=c(5,100000))
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red", ylim=c(5,150000))
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red", ylim=c(5,200000))
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red", ylim=c(5,175000))
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red", ylim=c(5,165000))
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red")
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red", "orange","green","yellow","blue")
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col=("red", "orange","green","yellow","blue"))
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red")
knitr::opts_chunk$set(echo = TRUE)
table(becal_completo$categoriauni)
barplot(prop.table(table(becal_completo$categoriauni)),
col = c("yellow", "blue", "orange", "red", "green"), ylim=c(0,0.9),
main="Ranking universidades becarixs BECAL", ylab ="")
table(becal_completo$categoriauni, becal_completo$totalgeneral)
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red")
plot(becal_completo$categoriauni, becal_completo$totalgeneral, pch=20,col="red")
knitr::opts_chunk$set(echo = TRUE)
summary(aov(edad ~ sectorlaboral, data=becal_completo))
sectorlaboral = function (funcionariopublicoinstitucion) {
if (funcionariopublicoinstitucion=="NO" | funcionariopublicoinstitucion=="NO ")
return ("privado")
else
return ("publico")
}
becal_completo$sectorlaboral = sapply(becal_completo$funcionariopublicoinstitucion, sectorlaboral)
becal_completo$sectorlaboral = sapply(becal_completo$funcionariopublicoinstitucion, sectorlaboral) #
summary(aov(edad ~ sectorlaboral, data=becal_completo))
summary(aov(sexo ~ tiempodecobertura, data=becal_completo))
summary(aov(mesesdeduraciondeestudios ~ sexo, data=becal_completo))
summary(aov(sexo~ mesesdeduraciondeestudios , data=becal_completo))
summary(aov(edad ~ sectorlaboral, data=becal_completo))
chisq.test(table(becal_completo$edad, becal_completo$sectorlaboral))
t.test(becal_completo$edad, becal_completo$sectorlaboral, alternative = "two.sided")
summary(aov(edad ~ sectorlaboral, data=becal_completo))
chisq.test(table(becal_completo$categoriauni, becal_completo$tipoestudio))
summary(aov(categoriauni ~ tipoestudio, data=becal_completo))
t.test(becal_completo$tipoestudio, becal_completo$categoriauni, alternative = "two.sided")
summary(aov(tipoestudio ~ categoriauni, data=becal_completo))
summary(aov(categoriauni ~ tipoestudio, data=becal_completo))
lm(categoriauni ~ tipoestudio, data=becal_completo)
summary(lm(categoriauni ~ tipoestudio, data=becal_completo))
lugarresidencia = function (departamentoderesidencia) {
if (departamentoderesidencia=="Capital" | departamentoderesidencia=="Asunción")
return ("capital")
else
if (departamentoderesidencia=="Central")
return ("central")
else
if (departamentoderesidencia=="Alto Paraná" | departamentoderesidencia=="Amambay" | departamentoderesidencia=="AMAMBAY" | departamentoderesidencia=="Boquerón" | departamentoderesidencia=="Caaguazu"| departamentoderesidencia=="Caaguazú" | departamentoderesidencia=="Caazapá" | departamentoderesidencia=="Canindeyú"| departamentoderesidencia=="Concepción" | departamentoderesidencia=="Cordillera" | departamentoderesidencia=="Guairá"| departamentoderesidencia=="Itapuá" | departamentoderesidencia=="Misiones"| departamentoderesidencia=="Ñeembucú" | departamentoderesidencia=="Paraguari" | departamentoderesidencia=="Paraguarí" | departamentoderesidencia=="San Pedro")
return ("interior")
else
return ("no aplica")
}
becal_completo$lugarresidencia = sapply(becal_completo$departamentoderesidencia, lugarresidencia)
summary(aov(mesesdeduraciondeestudio ~ lugarresidencia, data=becal_completo))
summary(aov(mesesdeduraciondeestudios ~ lugarresidencia, data=becal_completo))
chisq.test(table(becal_completo$mesesdeduraciondeestudios, becal_completo$lugarresidencia))
t.test(becal_completo$mesesdeduraciondeestudios, becal_completo$lugarresidencia, alternative = "two.sided")
summary(aov(mesesdeduraciondeestudios ~ lugarresidencia, data=becal_completo))
destinomas = subset(becal_completo, becal_completo$paisdedestino=="España" | becal_completo$paisdedestino=="ESPAÑA" | becal_completo$paisdedestino=="Argentina" | becal_completo$paisdedestino=="Francia" | becal_completo$paisdedestino=="Australia" | becal_completo$paisdedestino=="Reino Unido")
chisq.test(table(destinomas$sexo, destinomas$paisdedestino))
chisq.test(table(destinomas$sexo,droplevels(destinomas$paisdedestino)))
chisq.test(table(destinomas$sexo,droplevels(destinomas$paisdedestino)))
chisq.test(table(becal_completo$sexo,becal_completo$tiempodecobertura))
setwd("~/datascience-course/proyecto/Trabajo Practico")
chisq.test(table(becal_completo$sexo,becal_completo$tiempodecobertura))
becal_completo = read.csv("becal_completo.csv")
chisq.test(table(becal_completo$sexo,becal_completo$tiempodecobertura))
Este trabajo busca explorar el dataframe de becarixs del programa de Becas de Postgrado en el Exterior Carlos Antonio López para conocer relaciones entre las características de su población de becarixs. Para ello se utilizan a continuación diferentes técnicas de pruebas de hipótesis para conocer la relación entre variables especificas seleccionadas.
becal_completo = read.csv("becal_completo.csv")
## Diferencia en la cantidad de meses de estudio entre hombres y mujeres
El supuesto que se quiere testear es que el sexo de la persona determina en cierta medida o está correlacionado con la cantidad de meses de estudio.
Para realizar la prueba de hipótesis se utilizan las variables sexo y tiempo de estudio. Para medir el grado de relación se utilizó la técnica del chi cuadrado, con un intervalo de confianza del 95% y un nivel de significancia o alpha p = 0.05.
HO: No existe relación entre el sexo de lxs becarixs y la cantidad de meses de estudio.
HA: Existe relación entre el sexo de lxs becarixs y la cantidad de meses de estudio.
```{r diferencia_becas_sexo}
chisq.test(table(becal_completo$sexo,becal_completo$tiempodecobertura))
```
Según la p-value obtenida (0.1058) es mayor a 0.05, por lo que no se puede descartar la H0. Es decir, no existen diferencias estadísticamente significativas en cuanto a una relación entre el sexo de lxs becarixs y la cantidad de meses de estudio.
## Diferencia en edad entre becarios funcionarios públicos y becarios trabajadores del sector privado
El supuesto a comprobar es si existe una relación entre el sector laboral del que provienen lxs becarixs y la edad que poseen.
Para medir la relación entre la edad de lxs becarixs funcionarixs públicos y trabajadorxs del sector privado se utilizan las variables edad y la variable nueva sector laboral. Para crear la variable nueva se creó y utilizó la función sector laboral. Para ver la relación entre edad y tipo de becarix (funcionarix público o trabajadxr del sector privado) se utilizó el test ANOVA con un intervalo de confianza del 95% y un nivel de significancia o alpha p = 0.05.
H0: No existe relación entre la edad de los becarios y su pertenencia al sector público o al privado
HA: Existe relación entre la edad de los becarios y su pertenencia al sector público o al privado
```{r diferencia_becas_sector}
#Crea variable nueva sector laboral
sectorlaboral = function (funcionariopublicoinstitucion) {
if (funcionariopublicoinstitucion=="NO" | funcionariopublicoinstitucion=="NO ")
return ("privado")
else
return ("publico")
}
becal_completo$sectorlaboral = sapply(becal_completo$funcionariopublicoinstitucion, sectorlaboral)
#Código que calcula la relación entre sector laboral del becarix y edad
summary(aov(edad ~ sectorlaboral, data=becal_completo))
```
ANOVA dio como resultado un número muy pequeño (2.52e-16) no significativo para descartar la H0 o aceptar la HA, por lo tanto no se puede concluir que existe una relación entre la diferencia en edad y el sector laboral del que provienen lxs becarixs.
### Diferencia en el ranking de las universidades de los que estudian maestría versus los que estudian doctorado
El supuesto que se quiere probar en este ejercicio es que existe una relación entre el ranking de las universidades y el tipo de programa al que acceden lxs becarixs.
Para encontrar la relación entre el ranking de las universidades y el tipo de programa (maestría o doctorado) se utilizaron las variables categoria uni y tipo de estudio. La técnica utilizada para medir la relación entre las variables fue chi cuadrado con un intervalo de confianza del 95% y un nivel de significancia o alpha p = 0.05.
H0: No hay relación entre el ranking de universidades y el tipo de programa financiado.
HA: Hay relación entre el ranking de universidades y el tipo de programa financiado.
```{r diferencia_becas_tipo}
chisq.test(table(becal_completo$categoriauni, becal_completo$tipoestudio))
```
Chi cuadrado dio como resultado p-value (4.27e-05) no significativo para descartar la H0 o aceptar la HA, por lo tanto no se puede concluir que existe una relación entre el ranking de universidades y el tipo de programa financiado.
### Diferencia en la cantidad de meses de estudio entre los residentes de la capital, central, e interior
El supuesto a comprobar es que existe una relación entre la cantidad de meses de estudio dependiendo de si lxs becarixs residen en la capital, central o el interior del país.
Para encontrar la relación entre la residencia de lxs becarixs y los meses de estudio se utilizaron las variables meses de duración de estudios y la nueva variable lugar de residencia (capital, central, interior).
Con la función lugar residencia se creó la nueva variable a partir de la variable inicial departamento de residencia. Para analizar la relación entre meses de duración de estudios y lugar de residencia se utilizó la técnica ANOVA con un intervalo de confianza del 95% y un nivel de significancia o alpha p = 0.05.
H0: No hay relación entre la cantidad de meses de estudio y el lugar de residencia del becarix.
HA: Hay relación entre la cantidad de meses de estudio y el lugar de residencia del becarix.
```{r diferencia_becas_ciudad_residencia}
# Nueva variable lugar de residencia
lugarresidencia = function (departamentoderesidencia) {
if (departamentoderesidencia=="Capital" | departamentoderesidencia=="Asunción")
return ("capital")
else
if (departamentoderesidencia=="Central")
return ("central")
else
if (departamentoderesidencia=="Alto Paraná" | departamentoderesidencia=="Amambay" | departamentoderesidencia=="AMAMBAY" | departamentoderesidencia=="Boquerón" | departamentoderesidencia=="Caaguazu"| departamentoderesidencia=="Caaguazú" | departamentoderesidencia=="Caazapá" | departamentoderesidencia=="Canindeyú"| departamentoderesidencia=="Concepción" | departamentoderesidencia=="Cordillera" | departamentoderesidencia=="Guairá"| departamentoderesidencia=="Itapuá" | departamentoderesidencia=="Misiones"| departamentoderesidencia=="Ñeembucú" | departamentoderesidencia=="Paraguari" | departamentoderesidencia=="Paraguarí" | departamentoderesidencia=="San Pedro")
return ("interior")
else
return ("no aplica")
}
becal_completo$lugarresidencia = sapply(becal_completo$departamentoderesidencia, lugarresidencia)
# Relación lugar de residencia y meses de estudio
summary(aov(mesesdeduraciondeestudios ~ lugarresidencia, data=becal_completo))
```
ANOVA arrojó como resultado un valor de p muy pequeño (2.93e-06) como para para descartar la H0 o aceptar la HA, por lo tanto no se puede concluir que existe una relación entre la cantidad de meses de estudio y el lugar de residencia del becarix.
## Relación entre sexo de los becarios y país de destino. Considerar solo los cinco países con más becarios
El supuesto es que hay relacion entre el sexo del/a becarix y el país de destino. Para encontrar la relación entre el sexo de lxs becarixs y el país de destino se utilizaron las variables sexo y pais de destino respectivamente.
En primer lugar utilizando el código table se identificaron los cinco países con más becarixs. Luego con este criterio se creó un nuevo dataframe llamado destinomas a través del código subset donde se seleccionaron los registros correspondientes a los países con mayor cantidad de becarios (España, Argentina, Francia, Australia y Reino Unido), quedando conformado por un número de 580 registros u observaciones.
Posteriormente, utilizando el nuevo dataframe depurado, para el análisis de la relación entre el sexo y los países de destino con más becarixs se utilizó la técnica de análisis chi square con un intervalo de confianza del 95% y un nivel de significancia o alpha p = 0.05.
H0: No hay relación entre el sexo del/a becarix y su país de destino de estudio.
HA: Hay relación entre el sexo del/a becarix y su país de destino de estudio.
```{r diferencia_becas_lugar_residencia}
#Dataframe segun países con más becarixs
table(becal_completo$paisdedestino)
destinomas = subset(becal_completo, becal_completo$paisdedestino=="España" | becal_completo$paisdedestino=="ESPAÑA" | becal_completo$paisdedestino=="Argentina" | becal_completo$paisdedestino=="Francia" | becal_completo$paisdedestino=="Australia" | becal_completo$paisdedestino=="Reino Unido")
# Relación entre sexo y destino del becarix
chisq.test(table(destinomas$sexo,droplevels(destinomas$paisdedestino)))
```
El resultado obtenido en el p-value es de 0.01663, un valor menor a 0.05 por lo que se puede descartar la H0 y considerar la HA como válida. Existe una relación entre el sexo del/a becarix y su país de destino de estudio.
becal_completo = read.csv("becal_completo.csv")
chisq.test(table(becal_completo$sexo,becal_completo$tiempodecobertura))
chisq.test(table(becal_completo$mesesdeduraciondeestudios, becal_completo$sexo))
chisq.test(table(becal_completo$sexo, becal_completo$mesesdeduraciondeestudios))
View(becal_completo)
chisq.test(table(becal_completo$sexo, becal_completo$tiempodecobertura))
knitr::opts_chunk$set(echo = TRUE)
sectorlaboral = function (funcionariopublicoinstitucion) {
if (funcionariopublicoinstitucion=="NO" | funcionariopublicoinstitucion=="NO ")
return ("privado")
else
return ("publico")
}
becal_completo$sectorlaboral = sapply(becal_completo$funcionariopublicoinstitucion, sectorlaboral) #Nueva variable sector laboral
