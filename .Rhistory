v=c()
v=c()
nu=c(0.5,0.6)
l1=c(TRUE, FALSE, TRUE)
l2=c(T,F)
ch=('a')
it=9:29
co=c(1+0i, 2+4i)
v=vector('numeric')
v[1]=5
v(1)=5
print(v)
y=c(1.7, 'a')
y
y=c(TRUE,2)
y
y=c(FALSE,2)
it
y=c(TRUE,'a')
x=0:6
x=0:6
(class) x=0:6
(class)
class(x)
x=as.numeric(x)
x
x=as.logical(x)
x
x=as.character(x)
x
x=c('a','b', 'c')
x=as.numeric(x)
x
x=as.logical(x)
x
m=matrix(1:6, nrow=2, ncol = 3)
m
dim (m)
m[2,1]
m[3,1]
z=cbind(x,y)
x=1:3
y=10:12
z=cbind(x,y)
z
w=rbind(x,y)
w
x= list(1,'a',TRUE, 1+4i)
x
x[1]
x[[1]]
x=factor(cl('yes','no','yes','no'))
x=factor(c('yes','no','yes','no'))
x
table(x)
x=factor (c('yes','yes','no','yes','no'), levels=c('yes','no'))
x
x=c(1,2,NA,10,3)
x=c(1,2,NA,10,3)
is.na(x)
x=data.frame (c1=1:5, c2=c(T,T,F,F,F,T), c=3=c('a','b','c','d','e'))
x=data.frame(c1=1:5, c2=c(T,T,F,F,F,T), c=3=c('a','b','c','d','e'))
x=data.frame(c1=1:5, c2=c(T,T,F,F,F,T), c3=c('a','b','c','d','e'))
x=data.frame(c1=1:5, c2=c(T,T,F,F,T), c3=c('a','b','c','d','e'))
x
nrow(x)
ncol(x)
dim(x)
names(x)
x=2
y=0
x=2
y=0
if(x>3){
y=10
} else {
y=50
}
y
x=10
y=0
if(x>3){
y=10
} else {
y=50
}
y
f(x==10) {
print('El valor')
}
x=10
if(x==10) {
print('El valor')
}
x=11
if(x==10) {
print('El valor')
}
x=data.frame(c1=4>6, c2=18:20)
for(i in seg_len(nrow(x))) {
print(x(i,'cl'))
print (x(i,2))
}
x=data.frame(c1=4>6, c2=18:20)
for(i in seg_len(nrow(x))) {
print(x(i,'cl'))
print (x(i,2))
}
x=data.frame(c1=4>6, c2=18:20)
for(i in seq_len(nrow(x))) {
print(x(i,'cl'))
print (x(i,2))
}
for(i in seq_len(nrow(x))) {
print(x(i,'cl'))
print(x{i,2})
}
for(i in seq_len(nrow(x))) {
print(x[i,'cl'])
print(x[i,2])
}
x=data.frame(c1=4>6, c2=18:20)
for(i in seq_len(nrow(x))) {
print(x[i,'cl'])
print(x[i,2])
}
x=data.frame(c1=4:6, c2=18:20)
for(i in seq_len(nrow(x))) {
print(x[i,'cl'])
print(x[i,2])
}
x
x=data.frame(c1=4:6, c2=18:20)
for(i in seq_len(nrow(x))) {
print(x[i,'cl'])
print(x[i,2])
}
for(i in seq_len(nrow(x))) {
print(x[i,'c1'])
print(x[i,2])
}
x=data.frame (c1=1:2, c2=10:11)
x
mult=function(x,c) {
return (x*c)
}
apply(x,2, mult,5)
x=data.frame(c1=1:2, c2=10:11)
area_circulo= function(r){
return(3.14*r^2)
}
sapply(x[,'c1'], area_circulo)
area_circulo= function(r,pi){
return(pi*r^2)
}
sapply(x[,'c1'], area_circulo,3.14)
x=data.frame(c1=1:5, c2=10:14)
x
rowsum(x)
rowSums(x)
colSums(x)
data=real.csv(file='becal-cobertura.csv', header=T, stringsAsFactors=F)
data=read.csv(file='becal-cobertura.csv', header=T, stringsAsFactors=F)
data=read.csv(file='becal-cobertura.csv', header=T, stringsAsFactors=F)
data=read.csv(file='becal-cobertura.csv', header=T, stringsAsFactors=F)
library(readxl)
matriculacnc <- read_excel("CPCH/matriculacnc.xlsx",
col_names = FALSE, col_types = c("text",
"numeric"))
View(matriculacnc)
View(w)
View(matriculacnc)
lag.plot(x, lags = 1, layout = NULL, set.lags = 1:lags,
main = NULL, asp = 1,
font.main=par("font.main"), cex.main=par("cex.main"),
diag = TRUE, diag.col="gray",
type="p", oma =NULL, ask =NULL, do.lines = n <= 150,
labels = do.lines, ...)
+
5+3
5-3
5/3
5*3
5^3
5*(10-3)
sqrt(25)
x<-5-3
print x
print(x)
x<-4
print(x)
print(X)
1s()
1s(x)
ls()
w <- "ejemplo"
print(ejemplo)
print(w)
w/2
class(w)
x<- c(1,2,3,5)
print(x)
x[4]
x[-4]
division <- x/2
print(division)
proporcion <- x/x[3]
print(proporcion)
incremento<-x[1] -x[4]
incremento<-x[-1] -x[-4]
porcentajeincre<- (incremento/x[-4]) * 100
print(porcentajeincre)
porcentajeincre [c(1,2)] <- c(7,8)
porcentajeincre
length(x)
min(x)
max(x)
range(x)
mean(x)
sum(x)
sum(x) / length(x)
year<-(from=1950, to=1980, by=5)
year<-(from= 1950, to=1980, by=5)
year<-( from= 1950, to=1980, by=5)
year<-seq(from=1950, to=1980, by=5)
om=1950, to=1980, by=5)
print(year)
year2<-(from=1980, to=1950, by=-5)
year2<- seq(from=1980, to=1950, by=-5)
print(year2)
1980:1950
names(x)
names(x)<-numeros
names(x)<-"numeros"
names(x)
my.summary <- function(x){
s.out <- sum(x)
l.out <- length(x)
m.out <- s.out / l.out
out <- c(s.out, l.out, m.out)
names(out) <- c("sum", "length", "mean")
return(out)
}
my.summary(x)
setwd("~/")
setwd("~/datascience-course")
getwd()
setwd("~/CPCH")
setwd("~/datascience-course")
read.csv(becal2017)
becal2017<-read.csv("becal2017")
getwd()
becal2017<-read.csv("becal2017.csv")
class(becal2017)
View(becal2017)
View(becal2017)
View(becal2017)
names(becal2017)
ncol(becal2017)
nrow(becal2017)
dim(becal2017)
summary(becal2017)
becal2017$Sexo
becal2017[,"Tipo.de.Beca..segÃºn.Programa.aprobado."]
becal2017[1,]
mean(x, na.rm = TRUE)
